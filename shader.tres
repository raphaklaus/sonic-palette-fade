[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeVectorDecompose" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 0.3 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 0.25 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=4]
uniform_name = "frame"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=6]
source = 1
texture_type = 1

[sub_resource type="VisualShaderNodeColorOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 100 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=8]
output_port_for_preview = 0

[resource]
code = "shader_type canvas_item;
uniform float frame;



void vertex() {
// Output:0

}

void fragment() {
// Input:6
	vec3 n_out6p0 = vec3(SCREEN_UV, 0.0);

// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out6p0.xy, 0.0);
		n_out7p0 = _tex_read.rgb;
		n_out7p1 = _tex_read.a;
	}

// ScalarUniform:35
	float n_out35p0 = frame;

// ScalarOp:17
	float n_in17p1 = 0.30000;
	float n_out17p0 = n_out35p0 - n_in17p1;

// ScalarOp:30
	float n_in30p1 = 0.25000;
	float n_out30p0 = n_out35p0 - n_in30p1;

// VectorCompose:9
	vec3 n_out9p0 = vec3(n_out17p0, n_out30p0, n_out35p0);

// ColorOp:8
	vec3 n_out8p0 = min(n_out7p0, n_out9p0);

// Output:0
	COLOR.rgb = n_out8p0;

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1600, 380 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 460, 80 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 720, 80 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 1380, 380 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 1040, 500 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 880, 260 )
nodes/fragment/17/node = SubResource( 2 )
nodes/fragment/17/position = Vector2( 620, 280 )
nodes/fragment/30/node = SubResource( 3 )
nodes/fragment/30/position = Vector2( 480, 440 )
nodes/fragment/35/node = SubResource( 4 )
nodes/fragment/35/position = Vector2( 300, 340 )
nodes/fragment/connections = PoolIntArray( 7, 0, 10, 0, 7, 0, 8, 0, 9, 0, 8, 1, 17, 0, 9, 0, 30, 0, 9, 1, 8, 0, 0, 0, 6, 0, 7, 0, 35, 0, 30, 0, 35, 0, 17, 0, 35, 0, 9, 2 )
